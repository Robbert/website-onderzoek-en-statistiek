stages:
  - build
  - deploy

variables:
  TAG_SERVER_LATEST: $CI_REGISTRY_IMAGE/server:latest
  TAG_SERVER_COMMIT: $CI_REGISTRY_IMAGE/server:$CI_COMMIT_SHORT_SHA

  TAG_CMS_LATEST: $CI_REGISTRY_IMAGE/cms:latest
  TAG_CMS_COMMIT: $CI_REGISTRY_IMAGE/cms:$CI_COMMIT_SHORT_SHA

  TAG_WEBSITE_LATEST: $CI_REGISTRY_IMAGE/website:latest
  TAG_WEBSITE_COMMIT: $CI_REGISTRY_IMAGE/website:$CI_COMMIT_SHORT_SHA

services:
  - docker:19.03.12-dind

cache:
  paths:
    - node_modules/
    - .next/cache/

build server:
  stage: build
  script:
    - docker build -t $TAG_SERVER_LATEST -t $TAG_SERVER_COMMIT ./server
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $TAG_SERVER_LATEST
    - docker push $TAG_SERVER_COMMIT
  only:
    refs:
      - develop
      - main 
    changes:
      - server/**/*
      - .gitlab-ci.yml
      - docker-compose.yml

build cms:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $TAG_CMS_LATEST -t $TAG_CMS_COMMIT ./cms
    - docker push $TAG_CMS_LATEST
    - docker push $TAG_CMS_COMMIT
  only:
    refs:
      - develop
      - main  
    changes:
      - cms/**/*
      - .gitlab-ci.yml
      - docker-compose.yml
  
build website:
  stage: build
  services:
    - docker:dind
  before_script:
    - docker info
  script:
    - docker build -t $TAG_WEBSITE_LATEST -t $TAG_WEBSITE_COMMIT ./website
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $TAG_WEBSITE_LATEST
    - docker push $TAG_WEBSITE_COMMIT
  only:
    refs:
      - develop
      - main  
    changes:
      - website/**/*
      - .gitlab-ci.yml
      - docker-compose.yml

deploy acceptance:
  stage: deploy
  script:
    - chmod og= $ID_RSA
    - apk update && apk add openssh-client
    - ls -al
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP 
        "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP 
        "docker pull $TAG_SERVER_LATEST && docker pull $TAG_CMS_LATEST && docker pull $TAG_WEBSITE_LATEST"
    - scp -i $ID_RSA -o StrictHostKeyChecking=no 
        docker-compose.yml $SERVER_USER@$SERVER_IP:~
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no 
        $SERVER_USER@$SERVER_IP 
        TAG_SERVER_LATEST=$TAG_SERVER_LATEST 
        TAG_CMS_LATEST=$TAG_CMS_LATEST 
        TAG_WEBSITE_LATEST=$TAG_WEBSITE_LATEST 
        DATABASE_USERNAME=$DATABASE_USERNAME
        DATABASE_PASSWORD=$DATABASE_PASSWORD 
        "docker-compose up -d --no-deps"
  after_script:
    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker image prune -a -f"
  environment:
    name: production
    url: https://onderzoek-en-statistiek.nl
  only:
    refs:
      - develop