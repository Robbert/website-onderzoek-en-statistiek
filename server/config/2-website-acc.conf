## Configuration for domain acc.onderzoek.amsterdam.nl

# configure cache
proxy_cache_path /var/cache/nginx/acc levels=1:2 keys_zone=cache_api_acc:10m inactive=7d use_temp_path=off;

server {
    listen              443 ssl http2;
    server_name         acc.onderzoek.amsterdam.nl;

    ssl_certificate /etc/ssl/os-certs/onderzoek_amsterdam_nl.crt;
    ssl_certificate_key /etc/ssl/os-certs/server.key;

    # check for urls starting with acc.onderzoek.amsterdam.nl/static/ if static files exist
    # if so, serve them with appropriate cache headers
    location ~ ^\/static\/([^\/]+)?.* {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Max-Age' 1728000;
        etag off;
        add_header Cache-Control "public,max-age=604800,immutable";
        root  /usr/share/nginx/html/acc;
        # redirect requests that don't match any file to root of application
        # this enables client side routers
        try_files $uri $uri/ /static/$1/index.html /$1;
    }

    # serve acc.onderzoek.amsterdam.nl/api/search-content from cache
    location /api/search-content {
        proxy_cache cache_api_acc;
        proxy_ignore_headers Cache-Control;

        # update every 5 minutes and always sends a cached version
        proxy_cache_valid 200 5m; 
        proxy_connect_timeout 1ms; 
        proxy_cache_revalidate on;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        
        # Use variable for upstream server to enable config test
        set $searchApi http://os-website-acc:3000/api/search-content;
        proxy_pass $searchApi;

        add_header X-Cache-Status $upstream_cache_status;
         # force browser to refresh after 10 minutes
        add_header Cache-Control "public,max-age=600, stale-while-revalidate=120";
    }

    # Send all other request to upstream server (nextjs in container os-website-acc)
    # Use basic authentication
    # Use variable for upstream server to enable config test
    location / {
        auth_basic "Acceptatie omgeving";
        auth_basic_user_file /etc/nginx/.htpasswd;
        set $websiteAcc http://os-website-acc:3000;
        proxy_pass $websiteAcc;
    }
}

## Configuration for domain acc.onderzoek-en-statistiek.nl
server {
    listen              443 ssl;
    server_name         acc.onderzoek-en-statistiek.nl;

    ssl_certificate /etc/letsencrypt/live/onderzoek-en-statistiek.nl/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/onderzoek-en-statistiek.nl/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/onderzoek-en-statistiek.nl/chain.pem;
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    # Send all request to upstream server (nextjs in container os-website-acc)
    # Use basic authentication
    # Use variable for upstream server to enable config test
    location / {
        auth_basic "Acceptatie omgeving";
        auth_basic_user_file /etc/nginx/.htpasswd;
        set $websiteAcc http://os-website-acc:3000;
        proxy_pass $websiteAcc;
    }
}